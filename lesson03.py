# Урок 3
# #######

# Операции со строками
# перечислим основные операции со строками
stroka = "Python is nice"
# функция len() возвращает длину строки
print(len(stroka))  # напишет 14
# метод index возвращает первое вхождение символа i
print(stroka.index('i'))  # 7
# метод count считает количество символов n в строке
print(stroka.count('n'))  # 2
# метод upper делает все буквы в строке большими
print(stroka.upper())  # PYTHON IS NICE
# метод lower делает все буквы в строке маленькими
print(stroka.lower())  # python is nice
# метод startswith возвращает истину, если строка начинается c Python
print(stroka.startswith("Python"))  # True
# метод endswith возвращает истину, если строка кончается на flies
print(stroka.endswith("flies"))  # False

# Слайсы - отрезки строк
# отрезки задаются по схеме s[начало:конец:шаг]

s = 'Pythonist'
# Можно считать как сначала, задавая положительные значения, так и с конца, используя отрицательные

# ниже порядок букв, так как они нумеруются в слайсах

# | P | y | t | h | o | n | i | s | t |
# | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |
# |-8 |-7 |-6 |-5 |-4 |-3 |-2 |-1 |   |

# возвращает буквы в строке начиная с 0 включительно по 6 исключительно
print(s[0:6])  # Python
# возвращает буквы в строке начиная с 0 включительно по 6 исключительно двигаясь по две буквы за шаг
print(s[0:6:2])  # Pto
# возвращает буквы в строке начиная с -4 исключительно по -1 включительно
print(s[-4:-1])  # nis
# указав отрицательный шаг, можно перевернуть строку
print(s[::-1])  # tsinohtyP

# Практические задания:
# распечатать слово самолёт так чтобы отдельными строчками вывелось:
#   тос
#   сам
#   лёт

# Написать программу, которая по введеному номеру месяца вычисляет,
# зима ли сейчас, лето или осень
# Вариант чуть сложнее - написать программу, которая по введеному номеру
# месяца и дню рождения выводит знак зодиака

# измените значения переменных ниже, чтобы все условия выполнились и
# распечатались числа от 1 до 6
number = 10
second_number = 10
first_array = []
second_array = [1, 2, 3]
# Все, дальше не меняйте

if number > 15:
    print("1")

if first_array:
    print("2")

if len(second_array) == 2:
    print("3")

if len(first_array) + len(second_array) == 5:
    print("4")

if first_array and first_array[0] == 1:
    print("5")

if not second_number:
    print("6")

# Списки:Начало
# Список - это упорядоченный изменяемый набор значений любых типов
new_list = []  # пустой список
another_empty_list = list()  # еще пустой список
mylist = [6, 5, 7, 4, 3, 9, 8, 777]  # список со значениями
# список с разными типами значений
complex_list = [1, 2, 'какая то строка', [1.2, 2.3, 5.6], False]
# список из строки или любого другого итератора можно создать так:
string_list = list('Список')
# и он будет выглядеть как ['С', 'п', 'и', 'с', 'о', 'к']
# У каждого элемента списка есть индекс
# у списка sp = [5, 8, 3, 2]
# будут индексы: 0, 1, 2, 3

print(new_list, another_empty_list, complex_list)
# [] [] [1, 2, 'какая то строка', [1.2, 2.3, 5.6], False]

# С помощью in мы можем проверить наличие в списке определенного элемента например:
if 6 in mylist:
    print("В mylist есть значение 6")

new_list.append(100500)  # Добавляет элемент в конец списка
